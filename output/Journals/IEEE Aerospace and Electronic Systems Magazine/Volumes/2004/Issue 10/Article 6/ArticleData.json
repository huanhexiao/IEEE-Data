{"citations": ["6754587", "7322121", "7118896"], "references": ["159342", "1053007", "1053007", "1020292"], "details": {"publisher": "IEEE", "issue_date": "Oct. 2004", "doi": "10.1109/MAES.2004.1365014", "title": "Software intensive systems safety analysis", "abstract": "Two important elements in the avionics suite of modern aircraft are: the flight control system (FCS) and the flight management system (FMS). The FCS provides the capability to stabilize and control the aircraft, while the FMS is responsible for flight planning and navigation. A clear trend in the aerospace industry is to place greater reliance on software systems, and many FCS and FMS subsystems are implemented primarily in software. For example, within the FCS is the flight guidance system (FGS) that generates roll and pitch guidance commands. Similarly, within the FMS is the vertical navigation (VNAV) function that acts like a third crew member in the cockpit, ordering mode change requests and resetting target altitude values to enable the aircraft to track the vertical flight plan. We have developed formal, executable models of the requirements for the mode logic of a FGS and for portions of the VNAV functionality. We have also conducted a comprehensive software safety analysis on the FGS mode logic model, and are completing the analysis of the VNAV model. This analysis uses as its starting point several \"traditional\" safety analysis techniques such as a functional hazard assessment (FHA), a fault tree analysis (FTA), and a failure mode effects analysis (FMEA). However, we are also using formal methods techniques known as model checking and theorem proving to verify the presence of safety properties in the model. This paper summarizes the (now completed) safety analysis that was performed on the FGS model, and highlights the similarities and differences with the (still on-going) safety analysis of the FMS model. In particular, we summarize progress made to date in the use of formal methods to verify the presence of the required safety properties in the models themselves.", "journal_title": "IEEE Aerospace and Electronic Systems Magazine", "firstpage": "21", "volume": "19", "lastpage": "26", "date_publication": "Oct. 2004", "inspec": "8164143", "date": "Oct. 2004", "date_current_version": "Mon Dec 13 00:00:00 EST 2004", "issue": "10", "pages": "21 - 26", "issn": "0885-8985"}, "authors": ["A. C. Tribble", "S. P. Miller"], "keywords": ["aircraft control", "aircraft navigation", "avionics", "failure analysis", "fault trees", "formal verification", "safety-critical software", "software fault tolerance", "theorem proving", "FGS mode logic model", "aerospace industry", "avionics", "failure mode effects analysis", "fault tree analysis", "flight control system", "flight guidance system", "flight management system", "flight planning", "formal methods", "functional hazard assessment", "model checking", "modern aircraft", "pitch guidance commands", "software intensive systems", "software safety analysis", "theorem proving", "vertical navigation function", "Aerospace control", "Aerospace electronics", "Aerospace safety", "Aircraft navigation", "Failure analysis", "Flexible manufacturing systems", "Logic", "Performance analysis", "Software safety", "Software systems", ""], "arnumber": "1365014"}