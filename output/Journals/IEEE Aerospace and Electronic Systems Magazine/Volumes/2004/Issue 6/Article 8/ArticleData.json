{"citations": [], "references": [], "details": {"publisher": "IEEE", "issue_date": "June 2004", "doi": "10.1109/MAES.2004.1308832", "title": "COTS software design minimizes ATS lifecycle cost", "abstract": "This paper identifies the design features of commercial-off-the-shelf (COTS) software that impact the lifecycle cost of automatic test system (ATS) solutions and provides a set of design guidelines. It demonstrates that the architecture of COTS software must be modular, based on correct functional allocation, should possess distribution capabilities, and contain open interfaces that remain backwards compatible. In the case of COTS development tools, the programmatic interface should be simple, extensible, and enforced in the development environment.", "journal_title": "IEEE Aerospace and Electronic Systems Magazine", "firstpage": "29", "volume": "19", "lastpage": "34", "date_publication": "June 2004", "inspec": "8018143", "date": "June 2004", "date_current_version": "Mon Jun 28 00:00:00 EDT 2004", "issue": "6", "pages": "29 - 34", "issn": "0885-8985"}, "authors": ["I. A. Neag"], "keywords": ["automatic test equipment", "life cycle costing", "software architecture", "software reusability", "ATS lifecycle cost", "COTS development tools", "COTS software architecture", "COTS software design", "automatic test system", "backwards compatible", "commercial-off-the-shelf", "development environment", "distribution capabilities", "functional allocation", "open interfaces", "programmatic interface", "Application software", "Automatic testing", "Computer architecture", "Costs", "Guidelines", "Instruments", "Software architecture", "Software design", "Software testing", "System testing", ""], "arnumber": "1308832"}