{"citations": [], "references": ["574422", "687923", "240194"], "details": {"publisher": "IEEE", "issue_date": "March 2009", "doi": "10.1109/MAES.2009.4811088", "title": "Non-linear sequencing", "abstract": "Spacecraft are traditionally commanded using linear sequences of time-based commands. Linear sequences work fairly well, but they are difficult and expensive to generate, and are usually not capable of responding to contingencies. Any anomalous behavior while executing a linear sequence generally results in the spacecraft entering a safe mode. Critical sequences like orbit insertions which must be able to respond to faults without going into safe mode are particularly difficult to design and verify. The effort needed to generate command sequences can be reduced by extending the vocabulary of sequences to include more sophisticated control constructs. The simplest extensions are conditionals and loops. Adding these constructs would make a sequencing language look more or less like a traditional programming language or scripting language, and would come with all the difficulties associated with such a language. In particular, verifying the correctness of a sequence would be tantamount to verifying the correctness of a program, which is undecidable in general. We describe an extended vocabulary for non-linear sequencing based on the architectural notion of cognizant failure. A cognizant failure architecture is divided into components whose contract is to either achieve (or maintain) a certain condition, or report that they have failed to do so. Cognizant failure is an easier condition to verify than correctness, and it can provide high confidence in the safety of the spacecraft. Because cognizant failure inherently implies some kind of representation of the intent of an action, the system can respond to contingencies in more robust and general ways. We will describe an implemented non-linear sequencing system that is being flown on the NASA New Millennium Deep Space 1 Mission as part of the Remote Agent Experiment.", "journal_title": "IEEE Aerospace and Electronic Systems Magazine", "firstpage": "41", "volume": "24", "lastpage": "46", "date_publication": "March 2009", "inspec": "10558033", "date": "March 2009", "date_current_version": "Fri Apr 03 00:00:00 EDT 2009", "issue": "3", "pages": "41 - 46", "issn": "0885-8985"}, "authors": ["Erann Gat"], "keywords": ["aerospace computing", "program verification", "safety-critical software", "space vehicles", "NASA New Millennium Deep Space 1 Mission", "Remote Agent Experiment", "cognizant failure architecture", "nonlinear sequencing", "orbit insertions", "program correctness verification", "spacecraft", "time-based commands", "Computer languages", "Contracts", "Laboratories", "NASA", "Propulsion", "Robustness", "Safety", "Space missions", "Space vehicles", "Vocabulary", ""], "arnumber": "4811088"}