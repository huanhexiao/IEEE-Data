{"citations": [], "references": [], "details": {"publisher": "IEEE", "issue_date": "March 2008", "doi": "10.1109/MAES.2008.4476102", "title": "Descriptive development system for true instrument synthesis", "abstract": "Synthetic Instruments are software entities, but there has been little dedicated support for them in available software tools. The focus has been exclusively on other areas, such as visual data flow and signal processing, but not on simplifying and automating instrument synthesis itself. A sad consequence of this mismatch between the tools available and the requirements of synthetic instrument design is that test engineers often are faced with considerable software challenge should they choose to apply a synthetic instrument rather than a natural instrument. But there's no inherent reason why this mismatch and consequent challenge should exist. We claim that given the proper tools, the tasks of specifying, synthesizing, operating, and maintaining synthetic instruments are simpler than the same tasks performed with natural instruments. In an attempt to close this gap and thereby prove our above assertion; we have developed a comprehensive software environment focused specifically on synthetic instrument technology. This new system fully synthesizes instruments and it does so automatically. Every aspect of the instrument is synthesized: the user interfaces, the upward automated test equipment drivers, the data persistence in files or databases, the calibration strategy, the visualization, and, of course, the measurement itself. Using this new architecture, we can synthesize, simulate, and implement instruments, automatically without end user coding. In addition, the environment provides a fundamentally robust approach to measurement re-use, as well as a way to predict performance of synthesized instruments, or to automatically synthesize instruments that meet particular desired specifications. Our system is based on measurement descriptions, not imperative procedures or data flow graphs. The test engineer specifies what is to be measured and the system \"places\" that measurement optimally on the hardware. In this way, the problem of legacy measurement hardware is avoi- - ded.", "journal_title": "IEEE Aerospace and Electronic Systems Magazine", "firstpage": "28", "volume": "23", "lastpage": "31", "date_publication": "March 2008", "inspec": "9902600", "date": "March 2008", "date_current_version": "Mon Mar 31 00:00:00 EDT 2008", "issue": "3", "pages": "28 - 31", "issn": "0885-8985"}, "authors": ["Chris Nadovich", "Dean Kaplan", "John Davis", "Michael Montgomery"], "keywords": ["software tools", "virtual instrumentation", "calibration strategy", "descriptive development system", "instrument synthesis", "signal processing", "software entities", "software tools", "synthetic instrument design", "visual data flow", "Design engineering", "Hardware", "Instruments", "Maintenance engineering", "Signal processing", "Signal synthesis", "Software testing", "Software tools", "Test equipment", "User interfaces", ""], "arnumber": "4476102"}