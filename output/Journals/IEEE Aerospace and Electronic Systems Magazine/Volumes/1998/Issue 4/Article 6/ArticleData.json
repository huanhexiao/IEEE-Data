{"citations": ["1281254", "4041534", "6958394", "4299907", "6032358", "4159907", "1049389"], "references": ["595959"], "details": {"publisher": "IEEE", "issue_date": "Apr 1998", "doi": "10.1109/62.666831", "title": "Testing for security during development: why we should scrap penetrate-and-patch", "abstract": "In the commercial sector, security analysis has traditionally been applied at the network system level, after release, using tiger team approaches, After a successful tiger team penetration, specific system vulnerabilities are patched. I make a case for applying software engineering analysis techniques that have proven successful in the software safety arena to security-critical software code. This work is based on the generally held belief that a large proportion of security violations result from errors introduced during software development", "journal_title": "IEEE Aerospace and Electronic Systems Magazine", "firstpage": "13", "volume": "13", "lastpage": "15", "date_publication": "Apr 1998", "inspec": "5891528", "date": "Apr 1998", "date_current_version": "Tue Aug 06 00:00:00 EDT 2002", "issue": "4", "pages": "13 - 15", "issn": "0885-8985"}, "authors": ["G. McGraw"], "keywords": ["safety-critical software", "security of data", "software development management", "adaptive vulnerability analysis algorithm", "design for security", "dynamic execution", "fault injection technique", "penetrate-and-patch", "security during development", "security-critical software code", "software engineering analysis techniques", "software safety", "software vulnerability", "testing", "tiger team penetration", "white-box analysis", "Application software", "Computer errors", "Computer security", "Information security", "Instruments", "National security", "Programming", "Software engineering", "Software safety", "Software testing", ""], "arnumber": "666831"}