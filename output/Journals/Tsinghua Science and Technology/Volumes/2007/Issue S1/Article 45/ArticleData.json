{"citations": [], "references": [], "details": {"publisher": "TUP", "issue_date": "July 2007", "doi": "10.1016/S1007-0214(07)70119-0", "title": "Practical strategies to improve test efficiency", "abstract": "This paper introduces strategies to detect software bugs in earlier life cycle stage in order to improve test efficiency. Static analysis tool is one of the effective methods to reveal software bugs during software development. Three popular static analysis tools are introduced, two of which, PolySpace and Splint, are compared with each other by analyzing a set of test cases generatedd by the authors. PolySpace can reveal 60% bugs with 100% R/W ratio (ratio of real bugs and total warnings), while Splint reveal 73.3% bugs with 44% R/W ratio. And they are good at finding different categories of bugs. Two strategies are concluded to improve test efficiency, under the guideline that static analysis tools should be used in finding different categories of bugs according to their features. The first one aims at finding bugs as many as possible, while the second concentrates to reduce the average time on bug revelation. Experimental data shows the first strategy can find 100% bugs with 60% R/W ratio, the second one find 80% bugs with 66.7% R/W ratio. Experiment results prove that these two strategies can improve the test efficiency in both fault coverage and testing time.", "journal_title": "Tsinghua Science and Technology", "firstpage": "250", "volume": "12", "lastpage": "254", "date_publication": "July 2007", "sponsor": "Tsinghua University Press (TUP)", "date": "July 2007", "date_current_version": "Tue Jan 17 00:00:00 EST 2012", "issue": "S1", "pages": "250 - 254"}, "authors": ["Zhigang Ding", "Hongcheng Wang", "Lianghe Ling"], "keywords": ["Computer bugs", "Inspection", "Manuals", "Programming", "Reliability", "Software", "Testing", "PolySpace", "software bug", "splint", "static analysis", ""], "arnumber": "6074060"}