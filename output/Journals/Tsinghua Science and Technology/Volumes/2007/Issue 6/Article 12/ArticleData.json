{"citations": [], "references": [], "details": {"publisher": "TUP", "issue_date": "Dec. 2007", "doi": "10.1016/S1007-0214(07)70178-5", "title": "Software support for LIRAC architecture", "abstract": "Memory limitations are always a focus of computer architecture. The live range aware cache (LIRAC) offers a way to reduce memory access using live range information. In the LIRAC system, scratch data need not be written back if the data will no longer be used. Three kinds of software support developed for LIRAC architecture use compiler analyses, binary analyses, and trace analyses. Trace analysis results show that LIRAC can eliminate 29% of cache write-backs on average and up to 83% in the best case for the SPEC CPU 2000 benchmark. These software techniques can show the feasibility and potential benefit of the LIRAC architecture.", "journal_title": "Tsinghua Science and Technology", "firstpage": "700", "volume": "12", "lastpage": "706", "date_publication": "Dec. 2007", "sponsor": "Tsinghua University Press (TUP)", "date": "Dec. 2007", "date_current_version": "Tue Jan 17 00:00:00 EST 2012", "issue": "6", "pages": "700 - 706"}, "authors": ["Peng Li", "Dongsheng Wang", "Haixia Wang", "Meijuan Lu", "Chongmin Li", "Weimin Zheng"], "keywords": ["Algorithm design and analysis", "Benchmark testing", "Computer architecture", "Program processors", "Radiation detectors", "Registers", "Resource management", "LIRAC", "cache", "live range", "memory hierarchy", ""], "arnumber": "6071821"}